# =============================================================================
# Docker Environment Configuration for AI Assistant
# =============================================================================
# Copy this file to .env and customize for your environment
# This file contains Docker-specific overrides

# =============================================================================
# OpenAI-Compatible API Configuration (Primary LLM Provider)
# =============================================================================
OPENAI_COMPATIBLE_ENABLED=true
OPENAI_COMPATIBLE_API_KEY=your_api_key_here
OPENAI_COMPATIBLE_BASE_URL=https://openrouter.ai/api/v1
OPENAI_COMPATIBLE_DEFAULT_MODEL=anthropic/claude-3.5-sonnet
OPENAI_COMPATIBLE_PROVIDER_NAME=OpenRouter

# =============================================================================
# OpenRouter Configuration (Backward Compatibility)
# =============================================================================
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# Model Configuration
DEFAULT_MODEL=anthropic/claude-3.5-sonnet
ROUTER_MODEL=deepseek/deepseek-chat
LOGIC_MODEL=anthropic/claude-3.5-sonnet
HUMAN_INTERFACE_MODEL=anthropic/claude-3.5-sonnet

# LLM Provider Configuration
PREFERRED_PROVIDER=openai_compatible
ENABLE_FALLBACK=true

# =============================================================================
# Ollama Configuration 
# =============================================================================
OLLAMA_SETTINGS_BASE_URL=http://ollama:11434
OLLAMA_SETTINGS_ENABLED=true
OLLAMA_SETTINGS_DEFAULT_MODEL=llama2
OLLAMA_SETTINGS_TIMEOUT=30
OLLAMA_SETTINGS_TEMPERATURE=0.7
OLLAMA_SETTINGS_MAX_TOKENS=
OLLAMA_SETTINGS_STREAMING=true
OLLAMA_SETTINGS_HEALTH_CHECK_INTERVAL=60
OLLAMA_SETTINGS_AUTO_HEALTH_CHECK=true

# =============================================================================
# FastAPI Server Configuration (Docker overrides)
# =============================================================================
HOST=0.0.0.0
PORT=8000
ENVIRONMENT=production
DEBUG=false
RELOAD=false

# =============================================================================
# Redis Configuration (Docker)
# =============================================================================
REDIS_URL=redis://redis:6379/0
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# =============================================================================
# Database Configuration (Docker)
# =============================================================================
POSTGRES_URL=postgresql://postgres:password@postgres:5432/langchain_agent_hub
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=langchain_agent_hub
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

# =============================================================================
# SearXNG Configuration (Docker)
# =============================================================================
SEARXNG_URL=http://searxng:8080
SEARXNG_HOST=searxng
SEARXNG_PORT=8080

# =============================================================================
# Security Configuration
# =============================================================================
SECRET_KEY=change_this_to_a_long_random_string_in_production

# =============================================================================
# Monitoring Configuration (Docker)
# =============================================================================
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30

# =============================================================================
# Logging Configuration (Docker)
# =============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/app/logs/app.log