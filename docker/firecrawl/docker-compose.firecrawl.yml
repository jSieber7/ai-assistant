name: firecrawl

volumes:
  postgres-data:
    driver: local

services:
  firecrawl-playwright:
    image: ghcr.io/firecrawl/playwright-service:latest
    container_name: ${COMPOSE_PROJECT_NAME:-my-stack}-firecrawl-playwright
    restart: unless-stopped
    environment:
      PORT: 3000
      PROXY_SERVER: ${PROXY_SERVER:-}
      PROXY_USERNAME: ${PROXY_USERNAME:-}
      PROXY_PASSWORD: ${PROXY_PASSWORD:-}
      BLOCK_MEDIA: ${BLOCK_MEDIA:-false}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - shared-network
    
    labels:
      - "traefik.enable=false"  # Internal service only

  firecrawl-api:
    image: ghcr.io/firecrawl/firecrawl
    container_name: ${COMPOSE_PROJECT_NAME:-my-stack}-firecrawl-api
    restart: unless-stopped
    environment:
      HOST: "0.0.0.0"
      PORT: ${PORT:-3002}
      EXTRACT_WORKER_PORT: ${EXTRACT_WORKER_PORT:-3004}
      WORKER_PORT: ${WORKER_PORT:-3005}
      ENV: local
      REDIS_URL: ${REDIS_URL}
      REDIS_RATE_LIMIT_URL: ${REDIS_RATE_LIMIT_URL}
      PLAYWRIGHT_MICROSERVICE_URL: ${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000/scrape}
      NUQ_DATABASE_URL: ${NUQ_DATABASE_URL:-postgres://postgres:postgres@nuq-postgres:5432/postgres}
      USE_DB_AUTHENTICATION: ${USE_DB_AUTHENTICATION:-false}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-}
      MODEL_NAME: ${MODEL_NAME:-gpt-3.5-turbo}
      MODEL_EMBEDDING_NAME: ${MODEL_EMBEDDING_NAME:-text-embedding-ada-002}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL:-}
      BULL_AUTH_KEY: ${BULL_AUTH_KEY:-}
      TEST_API_KEY: ${TEST_API_KEY:-test-key}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY:-}
      POSTHOG_HOST: ${POSTHOG_HOST:-}
      SUPABASE_ANON_TOKEN: ${SUPABASE_ANON_TOKEN:-}
      SUPABASE_URL: ${SUPABASE_URL:-}
      SUPABASE_SERVICE_TOKEN: ${SUPABASE_SERVICE_TOKEN:-}
      SELF_HOSTED_WEBHOOK_URL: ${SELF_HOSTED_WEBHOOK_URL:-}
      SERPER_API_KEY: ${SERPER_API_KEY:-}
      SEARCHAPI_API_KEY: ${SEARCHAPI_API_KEY:-}
      LOGGING_LEVEL: ${LOGGING_LEVEL:-info}
      PROXY_SERVER: ${PROXY_SERVER:-}
      PROXY_USERNAME: ${PROXY_USERNAME:-}
      PROXY_PASSWORD: ${PROXY_PASSWORD:-}
      SEARXNG_ENDPOINT: ${SEARXNG_ENDPOINT:-http://searxng:8080}
      SEARXNG_ENGINES: ${SEARXNG_ENGINES:-google,bing,duckduckgo}
      SEARXNG_CATEGORIES: ${SEARXNG_CATEGORIES:-general,science}
    ports:
      - "${PORT:-3002}:${PORT:-3002}"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-3002}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - shared-network
    
    depends_on:
      - redis
      - firecrawl-playwright
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firecrawl.rule=Host(`firecrawl.${BASE_DOMAIN:-localhost}`)"
      - "traefik.http.services.firecrawl.loadbalancer.server.port=${PORT:-3002}"
    command: node dist/src/harness.js --start-docker

  firecrawl-postgres:
    image: ghcr.io/firecrawl/nuq-postgres:latest
    container_name: ${COMPOSE_PROJECT_NAME:-my-stack}-firecrawl-postgres
    hostname: nuq-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shared-network
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"  # Internal service only
