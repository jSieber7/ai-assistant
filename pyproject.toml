[project]
name = "ai-assistant"
dynamic = ["version"] 
description = "AI assistant integrated with tool-calling."
readme = "README.md"
requires-python = "==3.12.3"

dependencies = [
    "aiohttp>=3.12.15",
    "beautifulsoup4>=4.12.0",
    "cryptography>=41.0.0", # For secure settings encryption
    "fastapi>=0.116.1,<0.117",
    "httpx>=0.28.1",
    "jinja2>=3.1.2",
    "langchain[community,openai]>=1.0.0", # MongoDB async driver
    "langgraph>=1.0.0",
    "deepagents>=0.1.0",
    "nest-asyncio>=1.6.0",
    "orjson>=3.11.3",
    "pip-audit>=2.9.0",
    "playwright>=1.40.0",
    "prometheus-client>=0.23.1",
    "pymilvus>=2.4.0",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.0.0",
    "pytz>=2023.3",
    "redis>=5.0.0",
    "selenium>=4.15.0",
    "uvicorn>=0.35.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "mkdocstrings-python>=1.18.2",
    "mkdocs-minify-plugin>=0.8.0",
    "asyncpg>=0.30.0",
    "sqlalchemy>=2.0.43",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["app"]

[tool.setuptools.dynamic]
version = {attr = "app.__version__"}

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=25.9.0",
    "mypy>=1.18.2",
    "psutil>=7.1.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.13.2",
    "jupyter>=1.0.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "mkdocstrings-python>=1.18.2",
    "mkdocs-minify-plugin>=0.8.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--ignore=tests/__pycache__",
]
markers = [
    "unit: unit tests",
    "integration: integration tests",
    "system: system tests",
    "slow: slow running tests",
    "docker: docker-related tests",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true
